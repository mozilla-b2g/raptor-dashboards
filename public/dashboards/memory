/* global _ */

// accessible variables in this scope
var window, document, ARGS, $, jQuery, moment, kbn;

var handler = function(callback) {
  var apps = {
    'cold-launch': {
      'calendar.gaiamobile.org': { id: 1, threshold: 11.141, goal: null },
      'camera.gaiamobile.org': { id: 2, threshold: 11.101, goal: null },
      'clock.gaiamobile.org': { id: 3, threshold: 9.892, goal: null },
      'communications.gaiamobile.org@contacts': { id: 4, threshold: 16.538, goal: null },
      'communications.gaiamobile.org@dialer': { id: 5, threshold: 11.220, goal: null },
      'email.gaiamobile.org': { id: 6, threshold: 12.504, goal: null },
      'fm.gaiamobile.org': { id: 7, threshold: 8.629, goal: null },
      'ftu.gaiamobile.org': { id: 14, threshold: null, goal: null },
      'gallery.gaiamobile.org': { id: 8, threshold: 13.029, goal: null },
      'sms.gaiamobile.org': { id: 9, threshold: 17.061, goal: null },
      'music.gaiamobile.org': { id: 10, threshold: 11.212, goal: null },
      'settings.gaiamobile.org': { id: 11, threshold: 14.578, goal: null },
      'video.gaiamobile.org': { id: 12, threshold: 10.587, goal: null },
      'test-startup-limit.gaiamobile.org': { id: 13 ,threshold: null, goal: null }
    },
    'reboot': {
      'verticalhome.gaiamobile.org': { id: 15, threshold: null, goal: null },
      'homescreen.gaiamobile.org': { id: 18, threshold: null, goal: null },
      'system.gaiamobile.org': { id: 16, threshold: null, goal: null },
      'b2g': { id: 17, threshold: null, goal: null }
    }
  };
  var tests = {
    'cold-launch': 'Cold Launch',
    'reboot': 'Reboot'
  };
  var templates = ['memory', 'device', 'branch', 'metric', 'aggregate'];
  var requires = ['base', 'annotations']
    .concat(templates)
    .map(function(r) {
      return 'public/dashboards/src/' + r + '.js';
    });
  var MEASUREMENT = 'memory';
  var TEST = ARGS['var-test'] || 'cold-launch';

  require(requires, function($dashboard, $annotations, $memory, $device, $branch, $metric, $aggregate) {
    var dashboard = $dashboard();
    var annotations = $annotations(TEST);

    dashboard.title = dashboard.originalTitle = 'Memory: ' + tests[TEST];
    dashboard.templating.list = [$metric(MEASUREMENT, TEST), $aggregate(MEASUREMENT), $memory(MEASUREMENT), $device(MEASUREMENT), $branch(MEASUREMENT)];
    dashboard.annotations.list = [annotations.gaia, annotations.gecko];
    dashboard.rows = [{
      "title": "Apps",
      "collapse": false,
      "editable": true,
      "height": "300"
    }];

    dashboard.rows[0].panels = Object.keys(apps[TEST]).map(function(context) {
      var app = apps[TEST][context];

      return {
        "aliasColors": {},
        "bars": false,
        "datasource": "raptor",
        "editable": true,
        "error": false,
        "fill": 1,
        "grid": {
          "leftLogBase": 1,
          "leftMax": null,
          "leftMin": 0,
          "rightLogBase": 1,
          "rightMax": null,
          "rightMin": null,
          "threshold1": app.goal,
          "threshold1Color": "rgba(216, 200, 27, 0.40)",
          "threshold2": app.threshold,
          "threshold2Color": "rgba(234, 112, 112, 0.40)",
          "thresholdLine": true
        },
        "height": "300",
        "id": app.id,
        "legend": {
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "links": [],
        "minSpan": 6,
        "nullPointMode": "connected",
        "percentage": false,
        "pointradius": 1,
        "points": true,
        "renderer": "flot",
        "scopedVars": {},
        "seriesOverrides": [],
        "span": 6,
        "stack": false,
        "steppedLine": true,
        "targets": [
          {
            "alias": "$tag_metric",
            "fields": [],
            "groupByTags": [
              "metric"
            ],
            "measurement": MEASUREMENT,
            "query": 'SELECT $aggregate FROM ' + MEASUREMENT + ' WHERE "context" =~ /' + context + '/ AND "memory" = \'$memory\' AND "device" = \'$device\' AND "branch" = \'$branch\' AND "metric" =~ /$metric/ AND "test" = \'' + TEST + '\' AND $timeFilter GROUP BY time($interval), "metric"',
            "rawQuery": true
          }
        ],
        "timeFrom": null,
        "timeShift": null,
        "title": context,
        "tooltip": {
          "shared": true,
          "value_type": "cumulative"
        },
        "type": "graph",
        "x-axis": true,
        "y-axis": true,
        "y_formats": [
          "bytes",
          "none"
        ],
        "decimals": 3
      };
    });


    callback(dashboard);
  });


};

return handler;